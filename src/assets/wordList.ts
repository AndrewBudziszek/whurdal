import { DateTime, Interval } from 'luxon';
import { verify } from 'whurdal-word-verifier';

const wordList: string[] = [
    'KNIFE',
    'YOUTH',
    'UNION',
    'HAVOC',
    'DRAMA',
    'ABOUT',
    'INDEX',
    'BRAVO',
    'MAGIC',
    'PEACH',
    'FUDGE',
    'STICK',
    'WRONG',
    'SHARP',
    'FAULT',
    'GRIFT',
    'VOICE',
    'CRYPT',
    'FAITH',
    'CHEAP',
    'ABOVE',
    'ALOHA',
    'STUDY',
    'SUPER',
    'LAYER',
    'SUGAR',
    'FORTE',
    'SPANK',
    'VIRUS',
    'DELTA',
    'MUSIC',
    'CHEWY',
    'NOISE',
    'BLOCK',
    'APPLE',
    'WASTE',
    'THEME',
    'LIGHT',
    'ABUSE',
    'TONES',
    'WHITE',
    'ALIKE',
    'UPSET',
    'COURT',
    'QUEEN',
    'PRIDE',
    'WRITE',
    'VIDEO',
    'URBAN',
    'SHOCK',
    'NORTH',
    'GRAND',
    'SPITE',
    'MARSH',
    'GIANT',
    'THETA',
    'POWER',
    'DOUBT',
    'SWING',
    'DRAFT',
    'RAISE',
    'FRESH',
    'RAPID',
    'VAGUE',
    'POUND',
    'AWFUL',
    'CREAM',
    'TULLE',
    'CRAZY',
    'JUDGE',
    'CHONK',
    'PARSE',
    'CIRCA',
    'PRIME',
    'THICK',
    'SCENE',
    'PIANO',
    'EXTRA',
    'UNITY',
    'CHIEF',
    'WORLD',
    'ORDER',
    'SHANK',
    'VALOR',
    'POINT',
    'FARCE',
    'SPIRE',
    'TOWER',
    'GUSTO',
    'MOIST',
    'CRANE',
    'SPIKE',
    'LEARN',
    'CHOIR',
    'XEROX',
    'QUANT',
    'MANOR',
    'EMAIL',
    'SERVE',
    'CABLE',
    'STEAM',
    'PRINT',
    'MONEY',
    'BIDET',
    'SPINE',
    'GIRTH',
    'FIBER',
    'SMART',
    'GHAST',
    'TOTAL',
    'ULTRA',
    'DIODE',
    'POISE',
    'BUILD',
    'GROIN',
    'FOCAL',
    'SCONE',
    'AXION',
    'INEPT',
    'FIRST',
    'MARIA',
    'SHAFT',
    'HYPER',
    'MOTIF',
    'BOSON',
    'SPACE',
    'AVANT',
    'MEDIA',
    'CHORE',
    'SHINE',
    'ORGAN',
    'MONTH',
    'DRIVE',
    'TROPE',
    'BATIK',
    'LADLE',
    'DRAWN',
    'ELOPE',
    'LEVEL',
    'PANEL',
    'FLUID',
    'GOURD',
    'ALBUM',
    'LINER',
    'QUERY',
    'INERT',
    'FIGHT',
    'CANON',
    'EMOTE',
    'DECAY',
    'BURST',
    'STYLO',
    'FARAD',
    'BELLE',
    'TUPLE',
    'STEEL',
    'MOTOR',
    'CRISP',
    'LARGE',
    'GLUON',
    'CLOSE',
    'FOCUS',
    'MOVIE',
    'EAGER',
    'CHAIN',
    'SLICE',
    'TRUNK',
    'INLAY',
    'ANION',
    'RATIO',
    'CLOUD',
    'SHORT',
    'OPTIC',
    'TETRA',
    'DUPLE',
    'CREST',
    'STAFF',
    'JOULE',
    'CHIME',
    'TONIC', 
    'PHOTO',
    'APART',
    'MESON',
    'CRIMP',
    'OUTRO',
    'TENOR',
    'QUIRK',
    'STORY',
    'ALPHA',
    'PRIMO',
    'MIGHT',
    'FIFTH',
    'DEPTH',
    'LYRIC',
    'HERTZ',
    'AURAL',
    'SLASH',
    'CARET',
    'TODAY',
    'HEART',
    'MORPH',
    'TWERP',
    'BASIC',
    'SHEAR',
    'HEXAD',
    'PITCH',
    'ANGEL',
    'TRICK',
    'SHOWN',
    'RADIX',
    'MEZZO',
    'PROTO',
    'SLIDE',
    'VERSE',
    'CRAFT',
    'ANODE',
    'SCORE',
    'TESLA',
    'EBONY',
    'WATCH',
    'SOLAR',
    'BLOKE',
    'ALLOY',
    'TEMPO',
    'GENUS',
    'PHASE',
    'METER',
    'PEDAL',
    'WHOLE',
    'CABIN',
    'TONAL',
    'TRIAD',
    'INTRO',
    'SCALE',
    'MOLAR',
    'RETRO',
    'CRUST',
    'RANGE',
    'FRUNK',
    'GUIDE',
    'MAJOR',
    'STERN',
    'LOVER',
    'BLIND',
    'CHORD',
    'ALARM',
    'PRISM',
    'VALUE',
    'ALIEN',
    'ISSUE',
    'DEATH',
    'PENNY',
    'WIRED',
    'FUGUE',
    'THEFT',
    'SCREW',
    'WOMAN',
    'QUARK',
    'PINOT',
    'BENCH',
    'TASTE',
    'DEBUT',
    'LEGAL',
    'STUFF',
    'GREEN',
    'WROTE',
    'VERGE',
    'WEIRD',
    'CREEP',
    'PAUSE',
    'STINK',
    'HUMAN',
    'GROUP',
    'IMAGE',
    'SOLVE',
    'WHEEL',
    'ANIME',
    'SHOOK',
    'PHONE',
    'LASER',
    'WORRY',
    'HOUSE',
    'NIFTY',
    'ADOBE',
    'SWEET',
    'APPLY',
    'STORM',
    'FUNKY',
    'RELAY',
    'CREED',
    'PACER',
    'STINT',
    'PARTY',
    'SLIME',
    'EARLY',
    'FINAL',
    'MOUSE',
    'COMIC',
    'AWARD',
    'STALL',
    'READY',
    'MERGE',
    'CLONE',
    'QUEER',
    'NERVE',
    'SWEEP',
    'BREAK',
    'CLING',
    'PEARL',
    'DRESS',
    'FORCE',
    'CAUSE',
    'BEACH',
    'GOOFY',
    'CHILL',
    'BROOD',
    'STALE',
    'DOING',
    'PIXEL',
    'DREAM',
    'SWELL',
    'GENRE',
    'QUEST',
    'ADULT',
    'SLING',
    'GIDDY',
    'CHESS',
    'SHARD',
    'UNTIL',
    'CHICK',
    'SCARE',
    'OTHER',
    'WHILE',
    'SQUAD',
    'FETUS',
    'BLOOD',
    'SLANG',
    'SPERM',
    'YOUNG',
    'ROUGE',
    'SKIRT',
    'ANGRY',
    'SHAME',
    'FETCH',
    'LATER',
    'BIRTH',
    'CLACK',
    'SPEAK',
    'HEAVY',
    'BLACK',
    'PUBIS',
    'ROGUE',
    'CHEEK',
    'QUICK',
    'SHIRT',
    'COVEN',
    'OFFER',
    'WORSE',
    'AFTER',
    'START',
    'GUESS',
    'USING',
    'TWEET',
    'QUAKE',
    'REPLY',
    'CLICK',
    'SHAPE',
];

let nonSowpodsAcceptedWords: string[] = ['CHONK', 'GRATZ', 'FRUNK', 'PROTO'];

export function verifyWordsInList(): string[] | null {
    let rejectedWords: string[] = [];
    let words: string[] = [];
    for (let i = 0; i < wordList.length; i++) {
        if (words.includes(wordList[i])) {
            rejectedWords.push(wordList[i] + ' DUPLICATE')
        }
        // Reject any words with 3 dupe letters
        for(const letter of wordList[i]) {
            if(wordList[i].split(letter).length > 3) {
                rejectedWords.push(wordList[i]);
                break;
            }
        }
        words.push(wordList[i])
        if (!wordIsValid(wordList[i])) {
            rejectedWords.push(wordList[i])
        }
    }

    return rejectedWords;
}

export function wordIsValid(word: string): boolean {
    word = word.toUpperCase();
    return (verify(word) || nonSowpodsAcceptedWords.includes(word)) && word.length === 5;
}

export function getDaysSinceBeginning(): number {
    const startDate = DateTime.local(2022, 2, 26);
    const daysSince = Interval.fromDateTimes(startDate, DateTime.local());
    const daysSinceInt = daysSince.length('days');

    return Math.floor(daysSinceInt);
}

export function getTimeUntilTomorrow(): string {
    let rightNow = DateTime.local();
    let tomorrow = DateTime.local().plus({ days: 1 }).startOf('day');

    return tomorrow.diff(rightNow).toFormat('hh:mm:ss');
}

export function getTodaysWord(): string {
    let daysSinceBeginning = getDaysSinceBeginning();
    return wordList[(daysSinceBeginning % wordList.length)];
}
